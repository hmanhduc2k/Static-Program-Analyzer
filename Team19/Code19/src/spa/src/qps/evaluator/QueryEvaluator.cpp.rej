diff a/Team19/Code19/src/spa/src/qps/evaluator/QueryEvaluator.cpp b/Team19/Code19/src/spa/src/qps/evaluator/QueryEvaluator.cpp	(rejected hunks)
@@ -114,12 +114,12 @@
 
     // Mapping of query types to their corresponding strategies.
     QueryEvaluator::strategyFactory = {
-        {"Follows", []() { return std::make_unique<FollowsStrategy>(); }},
-        {"Follows*", []() { return std::make_unique<FollowsStrategy>(); }},
-        {"Parent", []() { return std::make_unique<ParentStrategy>(); }},
-        {"Parent*", []() { return std::make_unique<ParentStrategy>(); }},
-        {"Uses", []() { return std::make_unique<UsesStrategy>(); }},
-        {"Modifies", []() { return std::make_unique<ModifiesStrategy>(); }}
+        {TokenType::Follows, []() { return std::make_unique<FollowsStrategy>(); }},
+        {TokenType::FollowsT, []() { return std::make_unique<FollowsStrategy>(); }},
+        {TokenType::Parent, []() { return std::make_unique<ParentStrategy>(); }},
+        {TokenType::ParentT, []() { return std::make_unique<ParentStrategy>(); }},
+        {TokenType::UsesS, []() { return std::make_unique<UsesStrategy>(); }},
+        {TokenType::ModifiesS, []() { return std::make_unique<ModifiesStrategy>(); }}
         // Additional strategies can be added here as needed.
     };
 }
