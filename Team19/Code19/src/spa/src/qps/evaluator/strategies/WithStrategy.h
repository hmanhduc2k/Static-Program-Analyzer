#pragma once // Ensures the file is included only once during compilation

#include "qps/evaluator/strategies/suchThatStrategies/StmtStmtStrategy.h"
#include <memory> // For std::shared_ptr


/**
 * @file WithStrategy.h
 * @brief Defines the WithStrategy class that implements equality between attributes.
 *
 * The WithStrategy class extends QueryEvaluationStrategy to evaluate queries 
 */

class WithStrategy : public QueryEvaluationStrategy {
private:
    Token firstParam;
    Token secondParam;

public:
    /**
     * Evaluates a query based on the with clause.
     * @param pkbReaderManager Reference to the PKB reader manager for accessing program knowledge.
     * @param parsingResult The parsing result containing the details of the query.
     * @return A shared pointer to the result table generated by the evaluation.
     */
    std::shared_ptr<ResultTable> evaluateQuery(PKBReaderManager& pkbReaderManager, const ParsingResult& parsingResult, const Clause& clause, const std::shared_ptr<ResultTable>& originalResultTable) override;
    std::shared_ptr<ResultTable> evaluateQuery(PKBReaderManager& pkbReaderManager, const ParsingResult& parsingResult, const Clause& clause) override;


    /**
     * Processes queries where the first parameter is a synonym and the second parameter is specific.
     * @param pkbReaderManager Reference to the PKB reader manager for accessing program knowledge.
     * @param parsingResult The parsing result containing the details of the query.
     */
    std::unordered_set<std::string> processParam(Token param, const ParsingResult& parsingResult, PKBReaderManager& pkbReaderManager, const std::shared_ptr<ResultTable>& resultTable);


    pair<string, string> extractAttributes(Token param, const ParsingResult& parsingResult, PKBReaderManager& pkbReaderManager);
    bool isInteger(const std::string& str);
    bool isQuotedString(const std::string& str);

    std::unordered_set<std::string> findIntersection(const std::unordered_set<std::string>& set1, const std::unordered_set<std::string>& set2);

    
};
